# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.5
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Install PostgreSQL client
        uses: ryankurte/action-apt@v0.2.0
        with:
          packages: libpq-dev

      - name: Install dependencies and setup database
        env:
          PGUSER: postgres
          RAILS_ENV: test
        run: |
          bundle install --jobs 4 --retry 3
          bin/rails db:setup

      # node config stolen from https://boringrails.com/articles/building-a-rails-ci-pipeline-with-github-actions/
      - name: Setup Node
        uses: actions/setup-node@v2.1.2
      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install yarn packages
        run: yarn install --pure-lockfile

      - name: Run tests
        env:
          PGUSER: postgres
        run: bundle exec rspec
